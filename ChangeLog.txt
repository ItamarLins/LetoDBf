/* Encoding: UTF-8 (No BOM)  Notation (in 5th position):
     * Change, ! Fix, % Optimization, + Addition, - Removal, ; Comment
*/

2017-12-08 01:06 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * rddleto.lib.xbp
    * use source lz4.c instead of .obj in xBuilder definition
      ; preferred tested C-compiler is PellesC ! ( other was hack for XCC ) 
  * test_mem.exe.xbp
    * add PellesC 'crtmt.lib' with _beginthreadex() to link, needed by default
      ; disable with LETO_NO_THREAD, read below

  * include/funcleto.h
  * source/client/leto1.c
  * source/client/letocl.c
  * source/client/letomgmn.c
  * source/client/rddsys.prg
    ! fix self referring duplicate init procedure :-(
    + introduce compile time define LETO_NO_THREAD for client library:
      if set, it prevents starting a second thread ( 'delayed error' ),
      as these parts are then not compiled into.
      ; aka default is 'on' also ( with a hack ) for non-MT ! xHarbour
    % spare variables usage in delayedError()

2017-12-05 15:42 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * include/funcleto.h
  * include/letocl.h
  * include/rddleto.ch
  * include/rddleto.h
  * source/3rd/lz4/lib/lz4.h
  * source/client/leto1.c
  * source/client/letocl.c
  * source/client/letomgmn.c
  * source/client/rddsys.prg
  * source/common/blowfish.c
  * source/common/common_c.c
  * tests/test_dbf.prg
  * tests/test_dbfe.prg
  * tests/test_file.prg
  * tests/test_filt.prg
  * tests/test_mem.prg
  * tests/test_ta.prg
  * tests/test_tr.prg
  * tests/test_var.prg
  + rddleto.lib.xbp
  + test_mem.exe.xbp
    * big xHarbour RDD compatibilty commit,
      fixing and adding more #if[n]def __XHARBOUR__ to exclude HB specifics
    * introduce #define LETO_NO_MT, if set it will prevent threading and TLS
      usage independent of app capabilies.
    + adding xBuilder for the RDD 'rddleto.lib.xbp',
      and one example 'test_mem.exe.xbp' how to link the RDD
      -- please note the "/u+rddleto.ch" flag. !
      Similar can be done with 'test_[var|file|dbfe|dbfe|ta]'.
    ; needed 3rd party LZ4 compression did not compile with XCC,
      so above xBuilder links an "lz4.obj" created manually! by PellesC V6.
      With another compiler, just remove the 'lz4.obj' from xBuilder list,
      and add instead the source 'lz4.c' ind 3rd subdir.

2017-12-04 18:58 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * include/funcleto.h
  * include/letocl.h
  * source/client/leto1.c
  * source/client/letocl.c
  * source/server/leto_2.c
  * source/server/letofunc.c
  * source/server/server.prg
    ! dbRlock(): stay at active record when different record to lock
    ! fix letoClearFilter() for possible missing pTable
    ! only (try to) set relation at server if both WA are LETO;
      formerly the server could crash if above was tried with debug mode > 10;
    * throw RTE for invalid relation at server only if FORCEOPT set, else
      silently ignore
    * secure leto_AddFields() for ! uiFields
    * make leto_SkipTagInfo() obsolete, open index files as informed by server
    ! fix for failed table open in a *new* WA:
      reset active WA at server to be resynced with next request
    * not throw RTE in case of failed open/ create table cause 'shared' error
    * split LetoConnectionNew() into part creating a new connection,
      move other part into new LetoConnectionOpen() to establish a connection
    * rewrite of LETO_RECONNECT to use the same client connection as before,
      not to open a new connection and closing the old
    * do not change current connection with closing it
    * call leto_DataSendRecv() only in wrapper leto_SendRecv()

2017-07-17 12:47 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/leto1.c
  * source/client/letocl.c
    * tiny change about lock register in Leto[Db]Append
    * ensure field lengths > 0 for letoCreate()/ letoOpen()
    ! fix MinGW warning of (by intention) fall trough in case switch
    ! re-work of leto_elch() to use local values instead pConnection->items,
      as struct may be already freed during app shutdown

  * source/server/server.prg
    + some more REQUEST

  * source/server/letofunc.c
    * increase in leto_TableLock()/ leto_RecLock() given timeout value by 1:
      0.02 s == 20 + 1 --> 2 lock tries
    * add internal delayed error test, invoked by
      leto_UDF( "Leto_GetAppOptions", 42 )  --> RTE

  * letodbsvc.hbp
    + compile flags to REQUEST full command set for HB & CT contrib

2017-07-12 17:17 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/leto1.c
    ! fix in letoFlush: test if WA have valid table before for updated data;
      Thanks Sergy for his patience to unravel his error handler
    % only for modified (locked) record, DBCOMMIT will send along with changed
      data also a 'flush' to server, else it is discarded

2017-07-11 12:08 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/leto1.c
    * error handling for open/ create table: add retry and default option

  * letodb.hbp
  * letodbaddon.hbp
  * source/server/server.prg
    + add two defines into HBPs to avoid source changes for activating
      full Harbour/ CT command set for UDFs

2017-07-10 18:08 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/leto1.c
  * source/server/letofunc.c
    ! fix silly bug in leto_RecLock() for opt. timeout in mode no_save_WA = 1,
      leading to possible wrong positive result
    ! fix UDF function LETO_RECLOCK
    + add missing useability of DB_DBFLOCK_HB64 lock scheme
    + add DBI_LOCKTEST to query server for F|R-lock

  * source/client/rddsys.prg
    * minor changes

2017-06-27 16:51 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  ; update client and server: tiny protocol change for Leto_UDF()

  * bin/letodb.ini
  + tests/rddleto.ini
  * source/client/rddsys.prg
    - nowhere referenced LETO_INIT()
  * source/common/common_c.c
  * source/server/server.prg
  * source/server/leto_2.c
  * source/server/letofunc.c
    + integrate UDP broadcast service as optional extra thread into server
    + provide counterpart Leto_Detect() for client lib
    + experimental: init procedure LETO_AUTOCONNECT:
      if "rddleto.ini" ( example in /tests ) or "<exe-name>.ini" is found
      in dir of executable, with minimum scheme:
      "Server = [//]IP|DNSname[:port][/]",
      --> automatic Leto_Connect() during application start, quit if failed.
      'DETECT' as server name will cause Leto_Detect() to broadcast for one.

  * source/client/letomgmn.c
    ! fix in leto_udp() if WA is not LETO --> call UDF_FUN as without WA,
      and now switch at server to WA 0
    ! GPF caused by unexpected error code in response.
      THANKS to MaurÃ­cio for pointing out
  * source/server/letofunc.c
    ! fix for special lengths of result for leto_udp(): add '+' prefix
    * for leto_udp() without WA switch to virtual WA 0, reset afterwards

  * include/rddleto.ch
    * change single-run flag to: RDDLETO_CH_
      intended to be the official flag if LetoDBf is available;
      useful to extend your source specific to LetoDBf client lib usage:
      #ifdef RDDLETO_CH_ ... [ #else ] ... #endif
    + add macro LETO_DEFAULT_PORT

  * source/client/letocl.c
    * add 2. param to Leto_MgID() to force refresh connect status
    * use macro LETO_DEFAULT_PORT

2017-06-19 00:13 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/letomgmn.c
    + add function translate old LETO_MAKEDIR -> LETO_DIRMAKE

  * source/server/letofunc.c
  * source/server/server.prg
    - remove obsolete Leto_FRead

  * tests/test_file.prg
    + add test sequence about new Leto_F*() functions

  * Readme.txt
    + new first chapter: td;dr
      compact quick instruction for experienced Harbour users
    * modify some comments on server options

2017-06-10 13:12 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * letodb.hbc
  * source/client/rddsys.prg
    * instead requests= in .hbc add a REQUEST into .prg for LETO_UDF
    ; needed in Leto_F*() functions

2017-06-09 23:57 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/letocl.c
    ! refresh BOF/ EOF/ FOUND flags in case the cached record is not re-read
      in a DbGoTo() call, because the active record didn't changed
      ; Thanks goes to abebuch for pointing out

2017-06-09 23:17 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/letomgmn.c
    * Leto_Fread() not to resize the referenced string buffer, but to copy the
      result into param instead using hb_storclen()

2017-06-09 19:55 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/letomgmn.c
    + add wrappers for: Leto_FOpen, Leto_FCreate, Leto_FClose,
      Leto_FSeek, Leto_FReadStr, Leto_FReadLen, Leto_FWrite, Leto_FEOF;
      same as F*() functions but to work at server invoked by Leto_Udf()
    * add boolean as first param to Leto_FError(): if true query the server
    * extend string limit for leto_udp() to HB_PATH_MAX to enable literally
      codeblocks

  * include/srvleto.h
    % move some items in structs to optimize aligning
    + add two items in USERSTRU for file handle handling

  * source/server/letofunc.c
    ! fix 2 warnings of Mingw 7.1, one was a bug; Thanks! to Itamar
    * implement logic to close all opened files with connection end;
      Leto_FClose() to only close files opened by Leto_FOpen/ Leto_FCreate
    ! tiny fix in leto_Udf() about not detaching MemIO tables
    * add possibility to execute literally given codeblock in leto_Udf() with
      possible params; example: leto_Udf( "{|a,b,c| func(a,b,c) }", 3, 2, 1 )
    ! fix in leto_mkCodeBlock() if error is handled inside

  * source/server/server.prg
    + add more needed file function REQUESTs

  * letodb.hbc
    + add request for Leto_Udf, needed for new Leto_F*()

  * rddletodebug.hbp
    * removing straying single quotation marks for a cflag

  * Readme.txt
    + add note about new Leto_F*() functions

2017-05-31 14:41 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/letomgmn.c
    + add Leto_Fread(), same Params as Fread()
      ; calls FReadStr as UDF and emulate @ param by reference

2017-05-30 14:33 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/server/letofunc.c
    ! correct re-using server internal! ALIAS names for MemIO tables,
      when these are closed/ failed to open;
      same for all tables in mode No_Save_WA=0 in case of failed open
    * minor formatting
    + add server side UDP functions:
      Leto_FOpen, Leto_FCreate, Leto_FClose ( Leto_FRename, Leto_FErase )

  * source/server/server.prg
    * add low level file-IO Fxxxx() functions to be linked to server;
      except FOpen and FCreate, but herfore Leto_FOpen/ LetoFCreate.
      These work like Harbour functions, but add the server datapath

2017-05-18 14:15 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/letocl.c
    ! fix creating a missing ALIAS for creating table:
      in case ALIAS is explicitely blank ( "" ), create a temporary one not
      derived from filename to avoid duplicate ALIAS e.g. for COPY TO same
      filename but in different directory

  * source/server/letofunc.c
    ! fix updating HB_FT_INTEGER, HB_FT_CURRENCY, HB_FT_AUTOINC field types:
      missing buffer pointer increment;
      add type HB_FT_ROWVER -- this and above are rarely used FP field types
    % optimize away one temp ptr, cleanings in leto_UpdateRecord()
    % simplify leto_Skip(), leto_Goto(), leto_UpdateRecord() and leto_Memo()
      by substitute of leto_GetParam() call

2017-03-31 09:17 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/letocl.c
    ! VERY IMPORTANT FUNDAMENTAL BUG FIX about requesting memo fields,
      many THANKS goes to Itamar pointing it out
    ; memo fields with a length of 45 [ '-' ] or multiple failed because
      wrong used leto_SendRecv() with an error number for a HB_GET_LE_UINT32
      leading buffer

2017-03-28 12:42 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  ; recompile server and client if flag: LETO_VPREVIOUS for the Leto_Var*()
    functions was used, e.g. as in tests/test_var.prg

  * include/rddleto.ch
  * source/client/letocl.c
  * source/client/letomgmn.c
    ! FIX inherited bug: overlapping flag LETO_VPREVIOUS with LETO_VCREAT
    * new default to set LETO_VCREAT, disabled by new LETO_VNOCREAT
    * move invalid char test ';' in name of group/ var into HB_FUNCs

  * source/server/letovars.c
    % optimize in leto_Variables(), esp. for action LETOSUB_set

  * tests/test_var.prg
    * corrections to use of LETO_VPREVIOUS, formatting

  * Readme.txt
    * typos, changed note about LETO_VPREVIOUS, new LETO_VNOCREAT

2017-03-27 14:54 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/server/letovars.c
    ! FIX that *non* fractional value given for LETOVAR_NUM is stored as
      double when it was before such type
    ; a fractional value will change an integer type into double, not reverse
    % tiny optimize of leto_var_ret(), to let hb_itemPut*() create item to
      spare one check for HB_IS_COMPLEX; use hb_itemPutNDLen and fill in
      length and decimals
    * formatting

2017-03-26 20:10 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * include/letocl.h
  * source/client/letocl.c
  * source/client/letomgmn.c
  * source/server/letovars.c
    ! fix of 'null pointer dereference' in LETO_VARGETLIST() for server UDF
      ; thank goes to Itamar's compiler
    * limit return value size only for LETOVAR_STR and LETOVAR_ARR;
      array with any size limit is transmitted as symbolic string
    * transmit LETOVAR_ARR as array value if no size limit for list

  * Readme.txt
    * typos, note about Leto_VarGetList

2017-03-24 15:00 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * include/letocl.h
  * source/client/letocl.c
    + buffered connection ID at server

  * include/rddleto.ch
  * source/client/letomgmn.c
  * tests/test_var.prg
    * return server connection ID for LETO_CONNECT() without param
    * make prefix of group for synced variables adapt- and predict-able
    ; connection-ID is added to make variables unique per connection

  * source/server/letovars.c
    % formatting, optimize leto_var_get()

2017-03-23 13:00 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/letomgmn.c
    % double performance of Leto_VarExprSync() by using optional 4th array
      item with a dynsym reference
    + adding internal Leto_VarExprClone() as unsure about reference counters
      increment of source in hb_itemCloneTo()

  * source/server/letovars.c
    % use instead of LETO_VARGROUPS->uiNameLen pGroup->szName for validating
    - remove unused LETO_VAR->uiNameLen

2017-03-22 23:03 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/server/letovars.c
    ! allow missing: empty, null length string type of Leto_Var
    % set Leto_Var type only during create
    * formatting, remove one help var, var focus, notation

2017-03-22 14:55 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * include/letocl.h
  * source/client/leto1.c
  * source/client/letocl.c
  * source/client/letomgmn.c
  * source/server/letovars.c
    ! FIX ! for LetoVar string type: one byte too less allocated, missed the
      terminating char; now also aligned to next higher 16B boundary block to
      spare new allocation if a new value is just a few bytes bigger
    + new type DATE as possible type for the Leto_Var*() system
      ; completing the types list: L-N-C-A-D
    + add new functions for local memvar syncing with server LetoVar's:
      Leto_VarExprTest(), Leto_VarExprCreate(), Leto_VarExprVars(),
      Leto_VarExprClear() and Leto_VarExprSync()
      ; this function family is for searching memvars by name in string
        EXPRessions, automatic creating an unique LetoVar, changing the
        expression to use Leto_VarGet() -- and afterwards to sync these
        PRIVATE/ PUBLIC memvar with corresponding LetoVars.
        See Readme.txt for description about how to use.
    * move main parts of PRG-level LETO_VAR[SET|GET] into C-function
    * with _SET_FORCEOPT = TRUE: modify filter expression containing memvar
      to use beforehand created Leto_Var(), sync them with server on table
      moves: GoTo, Skip, Seek; delete them with clear filter (e.g. close WA).
      Example: SET FILTER TO field >= xMyLocalMemvar
      --> optimized dynamic server side filter
    * error feedback for failed LetoDbOpenTable()
    - redundant header in letomgmn.c

  * source/server/letofunc.c
    ! FIX ! a typo for testing filter expression ( missing '+ 2' for a ptr )
      ; in special cases a filter possible at server was executed locally
    + add function leto_AliasTranslate() to translate client ALIAS to server
    * translate client ALIAS names into server ALIAS names in
      leto_mkCodeBlock() and leto_ExprGetType(); this will cover HbMemIO WA
      in filter expressions/ table transitions etc.

  * tests/test_var.prg
    + adding test for DATE type and Leto_VarExpr*() function collection

  * tests/test_filt.prg
    * add a test of memvar syncing

  * Readme.txt
    * notes about Leto_VarExpr*() functions, and the automatic use in filter
      expressins with _SET_FORCEOPT = TRUE

2017-03-13 17:00 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * include/rddleto.h
    * formatting, add fTransRec flag for LETOAREA

  * source/client/leto1.c
  * source/server/letofunc.c
    ! missing HB_FT_AUTOINC in leto_UpdateRecord() during transition
    ! update changed records for both WA before trans/ sort;
      update target WA afterwards a possible locally processed transition
    + special handling of DBI_TRANSREC at client: transmit fTransRec flag;
      use own version of not exported hb_dbfTransCheckCounters()
    + adding LETO_DBTRANS() of tests/test_tr.prg into client lib
    ; drop-in replace for __dbTrans() with optional string expressions for
      FOR/ WHILE expressions instead codeblocks
    * letoSort()/ letoTrans(): if FOR or WHILE string expression is invalid at
      server, try to process locally at client; throw RTE if locally invalid
    * rewrite of leto_dbEval() with fixes and cleanup

  * tests/test_tr.prg
    * more tests about __dbTrans(); respect Leto_DbTrans() in client lib

2017-03-07 10:05 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/leto1.c
  * source/server/letofunc.c
    * make LetoDBf act like Harbour for OrdDestroy(): throw no RTE in case of
      index order not exists; not remove active order in case of none argument
    ; remaining difference: RTE is thrown when order is in use by others
    * limit maximum ALIAS length in open/ create table

2017-02-22 20:45 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/letocl.c
  * source/server/letofunc.c
    ! fix for the fix from 2017-02-21 08:55 -- revert change in letocl.c,
      secure to not transmit active order in case of none registered order

  * Readme.txt
  * include/rddleto.ch
  * source/client/leto1.c
  * source/server/letofunc.c
  * source/server/server.prg
  * tests/letoudf.prg
    * cleanup for server side global triggers

2017-02-21 08:55 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/letocl.c
  * source/server/letofunc.c
    ! fix of index filepath if table is located in a subdirectory
    ! fix of client GPF is index order cannot be registered at server
    * formatting

2017-02-20 11:05 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/leto1.c
    ! FIX of wrong creation of ALIAS of DBF in a subdir if not given
      ; Thanks to Mario for detecting this silly bug
    * variable scope change in letoClearRel()

2017-02-17 22:48 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/leto1.c
    + re-add cyclic relation test to avoid GPF
    * tiny correction in letoOrderInfo()
    * formatting long --> HB_LONG

2017-02-16 12:00 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/leto1.c
  * source/server/letofunc.c
    ! fix of OrdWildSeek(); please verify result

  * Readme.txt
    * some notes about relations, modified note for filter

2017-02-14 23:43 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/leto1.c
  * source/server/letofunc.c
    - complete removing for now cyclic relation detection; expect a GPF in
      that rare case for your application

2017-02-13 18:08 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/leto1.c
  * source/server/letofunc.c
    ! FIX cyclic relation detection; old logic relied on relation hierachy
    * hack against DbInfo( DBI_TABLEEXT ) call in DbTableExt() for unused WA;
      rddInfo should be called instead

  * include/funcleto.h
  * include/letocl.h
  * source/client/leto1.c
  * source/client/letocl.c
  * source/common/common_c.c
    % replace leto_DeciSec() with macro LETO_CENTISEC();
      correct naming of 1/100 second as centisecond
    % use uiLen as uiTmp, spare one extra variable

  * source/client/letomgmn.c
    * remove one ';;'

2017-02-10 18:08 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/letocl.c
    ! FIX LetoDbPutRecord() for > 255 fields;
      many THANKS to Ron for finding the quite hidden bug
    % remove one param of leto_SetBlankRecord(); move RecNo nullify into
      LetoDbAppend()

  * bin/letodb.ini
  * source/server/leto_lnx.c
  * source/server/server.prg
    + add possibility to fetch UID/GID from a given user
    * default memotype to 0 for invalid type, let the server determine it
      at C-level

  * utils/manage/console.prg
    * better handling of server not respondig, then just quit

  * Readme.txt
    * new Server_User option, move some file explanations

2017-02-08 08:48 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  ; communication protocol change [Leto_Directory()], recompile all

  * include/letocl.h
  * source/client/leto1.c
  * source/client/letomgmn.c
    ! fix LETO_FERROR() and LetoGetError() for case of no connection
    ! fix letoOrderListFocus( NIL ) for just querying the order;
      Thanks Ron for pointing out
    - dissolve leto_getRcvBuff() and leto_ParseRec();
      replace LetoGetError() with connection->iError;
    - remove use of connection->iError for Leto_Var*(), only analysed in
      LETO_VAR[INCR|DECR]; reset it immediate afterwards
    * connection param for leto_CheckError()
    * move leto_CryptBuffReset() as static into letomgmn.c;
      rename it to leto_BufferResize()

  * source/client/letocl.c
    - remove socket support for Watcom OS2
    + experimental test to check for EAGAIN #if defined __SOCKET_EAGAIN__
    * increase socket buffers to 64K if OS default is smaller
    * clean up of connection->iError for file and variable functions;
      reset iError with each request send to server
    * respect new "+T;" at start of response for Leto_Directory() request

  * source/server/letofunc.c
    ! !FIX! missing pArea in leto_OpenTable() for No_Save_WA = 0;
      wrongly outcommented 2017-01-27, now use return of leto_SelectArea()
    ! tiny fix: uninitalized bytes in leto_DirMake()
    ! not set RDDI_MEMOEXT in leto_initSet(), it would prevent opening tables
      with non-default memotypes
    * exclude extended functionality in leto_Drop() for HB 3.0
    * add "+T;" at start of response for successfull directory request

  * include/rddleto.ch
    * formatting

2017-01-31 14:00 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  ; ! tiny communication protocol changes, recompile client, server, tools !

  * letodb.hbc
  - include/leto_std.ch
  * include/rddleto.ch
  * source/client/leto1.c
  * source/server/server.prg
    + define macros to translate Set() calls to Leto_Set()
    ; these can be included in C-level used rddleto.ch -> leto_std.ch obsolete
    % Leto_Set() rework, now a fully Set() 'drop-in' replace
    + Leto_Set() dummy for server, all forwarding to Set()
    ; do not use Leto_Set() directly to keep your source portable,
      it should be responsibility of the preprocessor

  * include/letocl.h
  * source/client/leto1.c
  * source/client/letocl.c
    * RDDI_CONNECTION to work with connection strings '//IP:port/'
    - remove transmit of MemoVersion; was nonsense
    + instead MemoVersion transmit memofile extension ( only 3 default ext )
    + re-add RDDI_ORD*EXT as handled locally, missing RDDI_MEMOEXT
    + set-ability for RDDI_MEMO* except for RDDI_MEMOEXT,
      as partly alternative to Leto_DbDriver()
    + transmit non-default memotype extension for drop-ing tables

  * include/srvleto.h
  * source/server/letofunc.c
    * rework of leto_SetMemoEnv(), move call into mutex, radical reset
      settings after table creation
    * set HB_SET_MBLOCKSIZE to server default in leto_initSet()
    ; fixes a Harbour bug which have not RDD dependent default 64
    * allow leto_Drop() try to drop used WA when used solely by caller
    ! fix typo in leto_Drop(): double checked filename for same PS
    + add memo-file delete in leto_Drop() for non default memotype
    - remove MemoVersion nonsense
    - remove memofield related entries out of pUStru, no more used in
      UDF LETO_DBCREATE()
    + info about memotype/ used RDD of tables for management tools

  * source/client/letomgmn.c
  * utils/manage/console.prg
    + new array items about memotype/ RDD, columns for them in browse

  * tests/buildall.sh
  * tests/buildall.bat
    + missing build of test_file

  * tests/test_dbfe.prg
    + add example of using memotype other than default

  * Readme.txt
    * changes to reflect above

2017-01-27 16:55 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/leto1.c
  * source/server/letofunc.c
    * apply 3 RDDI settings as hb_setSetItem()
    * do not transmit some RDDI string constants to server
    ; they would be global to all connections

2017-01-27 14:00 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * include/letocl.h
  * source/client/leto1.c
    ! apply hb_setSetItem() only for RDDI_AUTOORDER
    + introducing AUTOPEN and AUTORDER for DBFNTX if RDDI_STRUCTORD set true
    - remove homebrew AUTORDER -1 to disable AUTOPEN

  * source/client/letocl.c
    * transmit client setting of SOFTSEEK/ DELETED/ AUT[OPEN|ORDER] to server
      with intro for new connection
    + introducing AUTOPEN and AUTORDER for DBFNTX if RDDI_STRUCTORD set true

  * source/server/letofunc.c
    ! fix to correctly grep users per table in all server modes,
      used in management applications
    + apply missing Set() for RDDI_AUTOPEN
    - remove homebrew AUTORDER -1 to disable AUTOPEN

  * tests/test_dbfe.prg
    + test for SET AUT[ORDER|OPEN] also for DBFNTX, now default RDD

  * utils/manage/console.prg
    * better readability for the browse CB by using seperate functions

  * Readme.txt
    * change to reflect above changes; formatting

2017-01-25 09:50 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/server/letofunc.c
    % no table mutex lock during index creation for exclusive opened table
    % no table mutex for 'management connections info' if not table specific

2017-01-24 22:01 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * utils/manage/console.prg
    * increasing timeout for server response/ mutex access to 21 seconds

2017-01-24 16:17 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * Readme.txt
    + description for Leto_ReConnect(), comment about SET AUT[OPEN|ORDER]
    * changed entry for Leto_DirMake()

  * include/letocl.h
  * include/rddleto.ch
  * source/client/leto1.c
    + LETO_RECONNECT(); new possible connection establish error
    ; a function for 'server hop-ping': if connection communication error is
      handled by an error handler, this function shutdown possible still alive
      connection and establishes a new to ( possible different ) server;
      WA environment fully restored for new connection
    + connection param for letoClearCurrConn()

  * source/client/letocl.c
    ! length validation for DNS name without port
    ! reset temporary used iConnectRes; missing zeroizing pConnection struct
      for (re-used) new connection
    * set leto_DataSendRecv() error 1000 for communication problems
    + activate to set hb_socketSetError(), query-able at PRG level
    + connection param for letoClearCurrConn(), move call into
      LetoConnectionClose()

  * tests/test_file.prg
  * source/client/letomgmn.c
    * renamed LETO_MAKEDIR to LETO_DIRMAKE, conform to other LETO_DIR*
    + add test about directories commands

  * source/server/letofunc.c
    * do not send error for not closeable WA, only leave a log debug entry
    ! store last used RDD driver with creating tables for console
    ! fix Leto_DirMake()

  * test/test_filt.prg
    * add test for scope, aligning feedback

  * utils/manage/console.prg
    + add user name column for connections browse
    * some cleanup

2017-01-21 07:44 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/letocl.c
    ! tiny memory leak for invalid DNS names

  * source/client/letomgmn.c
    + only socket shutdown/ free resources in LETO_DISCONNECT() by extra param

2017-01-21 06:40 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/leto1.c
  * source/client/letocl.c
    + allow use of network name to be resolved as IP address

2017-01-21 22:33 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * include/leto_std.ch
  * source/client/leto1.c
  * source/client/letocl.c
  * source/server/letofunc.c
    + use of AUT[ORDER|OPEN] and SOFTSEEK in renamed LETO_SET(), leto_std.ch,
      transfer new setting to server if connection exists
    * change Leto_SetGet() to Leto_Set()

  * source/server/letofunc.c
    - remove outcommented deprecated lines
    ! fix limited locks list transfer in leto__MgMt()
    * send ok for closing closed/ not found WA, only leave a debug note about

  * tests/test_dbfe.prg
    + adding test for SET AUT[ORDER|OPEN]. LastRec()

  * Readme.txt
    + note about leto_std.ch, use of Leto_Set()

  * utils/manage/console.prg
    * limit locks list tranfer; change display of them
    ! better resize window behaviour

2017-01-20 16:24 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/leto1.c
    - SELF_CLOSE() already done by RDD for letoOpen()
    - not needed casting, variables
    - TAG creation in letoOrderCreate() done by server
    * move termination into upper func leto_getIpFromPath()
    * hardening letoOpen(), set at more places hb_rddSetNetErr()

  * source/client/letocl.c
  * source/client/letomgmn.c
    * moved termination into upper func leto_getIpFromPath()

2017-01-17 22:04 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/letocl.c
    ! fix of last change: simulate a Rlock after append in transaction
    - remove not needed variable
    * signed --> unsigned
    * increase buffer for LZ4 in leto_Send() to be immediate big enough to
      compress into

2017-01-17 16:37 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/leto1.c
  * source/client/letocl.c
    * not to register Rlock if Flock set or an exclusive opened table;
      in case of autoincrement-fields server response determines Rlock state
    * DBRI_LOCKED ( LetoDbIsRecLocked() ) to be HB conform ( no Flock )

2017-01-17 11:57 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/letocl.c
    % minors

  * letodb.hbc
  + include/leto_std.ch
  * source/client/leto1.c
    ! LETO_SETSKIPBUFFER choose connection of a table, not the active one
    + track change of SET DELETED with LETO_SETGET() to discard skipbuffer
    ; done with an own #command to overlay std.ch
    - remove client side wrong LETO_RECLOCKLIST(), no more needed LETO_SIZE(),
      LETO_CONNECTINFO() as redundant LETO_DBDRIVER()

  * source/server/letofunc.c
    * BCC warning

  * Readme.txt
  * tests/test_dbfe.prg
    * align feedback, adaptions

2017-01-16 20:00 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/leto1.c
  * source/client/letocl.c
    % optimizing table specific skipbuffer timeout: apply connection timeout
      value with opening/ creating table
    * cleanups

2017-01-16 14:40 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/leto1.c
    * missing if condition

2017-01-16 14:14 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * include/funcleto.h
    * formatting

  * include/letocl.h
  * include/rddleto.ch
  * source/client/leto1.c
  * source/client/letocl.c
    + automatic refresh record data after hotbuffer timeout and in case data at
      server is accessible to other ( not r|f-lock, shared, not readonly );
    + DbInfo( DBI_AUTOREFRESH ) to turn behaviour on/ off for a specific table
    ; disabling hotbuffer (-1) for a table will lead to a LetoDbSkip(0) for
      each accessed field!, better choose 1=0.01 s for multiple fields access
    * move last access timepoint from buffer-struct into table-struct
    - dissolve leto_AllocBuf() into here solely used leto_setSkipBuf()
    * remove a '#if 0', formatting

  * Readme.txt
    * some notes about automatic data refresh, typo

2017-01-12 18:48 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/leto1.c
    + missing DBFFPT for leto_DBDriver()
    ; please note this RDD is without index create/ use

  * source/server/letofunc.c
  * utils/manage/console.prg
    * text of two log messages
    + transmit and display by connection active used RDD driver
    ! correct freeze of leftmost columns
    ; note new descriptions in column "last action" in Connections browse

  * Readme.txt
    * some notes about Harbour 3.0, above change, typos, etc ...

2017-01-12 06:42 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * include/srvleto.h
  * source/client/letocl.c
    * hack me a possible missing POLLRDNORM
    ; maybe not needed at all

  * include/rddleto.ch
  * source/server/letofunc.c
  * source/server/server.prg
    * change #defines to all upper case

2017-01-11 23:03 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * include/funcleto.h
  * source/common/common_c.c
  * source/common/lz4net.c
  * source/client/letocl.c
  * source/server/leto_2.c
  * source/server/letofunc.c
    * remove one func inlining
    % use macro LZ4_COMPRESSBOUND instead function
    * split leto_SockSend() in two versions for ZLib and LZ4
    * formatting, squeezing for last bits performance

  * source/common/common_c.c
  * source/server/leto_2.c
    % change to CLOCK_MONOTONIC from .._RAW, had unexpected much more latency
    * remove one func inlining

  * utils/manage/console.prg
    * some keyboard shortcuts, refresh rate, formatting, small improves ..

2017-01-10 20:10 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/leto1.c
  * source/client/letocl.c
    * DbSeek() behaviour for invalid key conform to HB: no RTE, but goto EOF

  * source/server/letofunc.c
    ! fix DbSeek() null string;
    ; THANKS Ash ! for locating bug, as revealing two at once ;-)
    ! fix for blank date key in leto_KeyToItem()

  * tests/test_dbf.prg
    + adding test for blank DbSeek( '' ), TS seek, formatting

2017-01-10 16:17 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/leto1.c
  * source/client/letocl.c
  * source/client/letomgmn.c
    * centralize reallocating buffers to standard size
    - above not needed for common memofields, they should be of moderate size
    ! missing buffer dealloc after big transaction

  * source/server/leto_2.c
    + adding microseconds precision for server statistics;
      CLOCK_MONOTONIC_COARSE had too low resolution ( 4 ms );

  * include/funcleto.h
  * include/srvleto.h
  * source/client/letocl.c
  * source/common/common_c.c
  * source/server/letofunc.c
    * dissolve leto_sendRecWithOk() into leto_Lock()
    - complete remove of leto_Updated() logic, only used in leto_lock()
    ; will force record data to be re-send/refreshed at client after R|Flocks

  * utils/manage/console.prg
    ! fix a browse refresh problem
    + add descriptions for last action
    * cleanup

  * tests/test_dbf.prg
    + adding test for DbSeek() with/ without softseek

2017-01-09 20:27 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/server/letofunc.c
    ! typo: plus '|' versus and '||' :-(

  * utils/manage/manage.prg
    ! try to hack a not reliable working GUI, resulting in array bounds fail

2017-01-09 13:30 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * include/funcleto.h
    % increase min size to start compress

  * source/server/letofunc.c
  * tests/test_file.prg
    ! file mask for Windows and directory request, one typo
    * harmonize feedback from server for all file functions

  * Readme.txt
    * minor

2017-01-09 05:20 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/common/common_c.c
    ! typo: plus '|' versus and '||'

  * source/server/leto_2.c
    * a hack to show more CPU load
    ; would need at least micro-seconds granularity to be more precise

  * Readme.txt
  * utils/manage/console.hbp
  * utils/manage/console.prg
  * utils/manage/manage.hbp
  * utils/manage/manage.prg
    * fixes and cleanups, comments in Readme

  - utils/manage/bld.bat
    ; was not working

2017-01-08 23:55 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * include/letocl.h
  * source/client/letocl.c
  * source/server/letoacc.c
  * source/server/letofunc.c
    + truncate/ append mode param
    * new param for leto_DecryptText
    ! changing communication protocol for leto_filewrite() and leto_memoread(),
      fix of ToDo from 2016-12-12
    ; CHECK you recompiled both client lib  and server
    ! add strg-z to content in leto_memowrite(), remove in leto_memoread() if
      last char is strg-z ( char 26 )
    ; CHECK if you used these functions, change is to be MemoRead()/ MemoWrit()
      conform; if behaviour is unwanted, use Leto_FileRead()/ Leto_FileWrite()

  * Readme.txt
  * tests/test_file.prg
  * source/client/letomgmn.c
    * new param for leto_DecryptText
    + add new client functions Leto_FCopyToSrv()/ Leto_FCopyFromSrv()
    ; in new Harbour file API with possible redirectors, dummies for HB3.0

2017-01-07 17:00 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/server/letoacc.c
    ! fix filwrite, wrong attribute

  * include/letocl.h
  * include/funcleto.h
  * source/client/letocl.c
  * source/server/letofunc.c
    + compression for LetoFileWrite() and LetoMemoWrite()
    % increase max receive block size: 0x7FFFFFFF aka 2GB - 32MB
    ; may test such big blocks handles

  * Readme.txt
    * comment about leto.sh and Linux time-wait

2017-01-06 19:09 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/server/leto_win.c
  * source/server/server.prg
    ! fix timeout for deleting service
    % increase granularity for service shutdown, use Windows API
    * formatting
    + add a description for the service, shown in GUI management for services
    ; description for now in english, easy to adopt in server.prg

  * include/rddleto.h
  * include/srvleto.h
  * source/common/blowfish.c
  * source/client/leto1.c
  * source/server/letoacc.c
  * source/server/letofunc.c
  * utils/manager/console.prg
    ! fixes for __HARBOUR30__
    ; we need to SET __LZ4 and __PMURHASH environment variables, as hbmk2 v3.0
      can not use "-env"; encryption for network is different, so can not mix
      Harbour 3.2 clients with 3.0 compiled server and vice versa

  * bin/leto.sh
    % without temp file

2017-01-05 22:58 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/server/server.prg
    % improve feedback in case of problems

  * Readme.txt
    * improve notes about Win service use, BCC compile ...

2017-01-05 21:10 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/server/server.prg
    ! missing oApp for  __LINUX_DAEMON__, change to LOCAL var

  * source/client/leto1.c
    * change to order 0 if OrdDestroy() the active one

2017-01-05 19:58 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * letodb.hbp
  * letodbsvc.hbp
    * hack for BCC to use hbct, hbmemio and rddbm libs without hbc files

2017-01-05 18:30 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/leto1.c
    ! one byte more for an empty field array

  * source/server/leto_win.c
  * source/server/server.prg
    ! fix to start server: missing public 'oApp' in StartServer() :-(
    * start server after successful Win service install
    % check for service state to faster end
    * GTNUL default for __LINUX_DAEMON and __WIN_SERVICE__
    * cleanup, formatting

  * letodb.hbp
  * letodbsvc.hbp
    * link no default GT for __LINUX_DAEMON and __WIN_SERVICE__

  * Readme.txt

2017-01-03 23:35 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/leto1.c
  * source/client/letocl.c
  * source/server/letofunc.c
    * remove return; in the middle of function letoCreate(), leaving a missed
      new var to hb_xfree()
    * clean up/ solve more ToDo's

  * Readme.txt
    * typo

2017-01-03 20:30 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * ChangeLog.txt
    !! date :-) -- happy new year to all

  * source/client/leto1.c
  * source/client/letocl.c
  * source/server/letofunc.c
    + strengthen protection against invalid fieldnames ( e.g. duplicated ) for
      creating tables
    + respect field flags for HB_FT_STRING, example: binary: then not trim to
      send and not CDP translate
    + not CDP translate memo-fields with field flags, and only HB_FT_MEMO

2017-01-03 14:30 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * letodb.hbp
  * letodbaddon.hbp
  * letodebug.hbp
  * rddleto.hbp
  * rddletodebug.hbp
  * source/server/server.prg
    * removing __LINUX__ define, hbp cleanups
    * change comment to stop server in Linux console mode

  * source/client/leto1.c
    * remove homebrew, back for all to use hb_strnToNum()

  * source/server/letofunc.c
    % spare 2 variables, formatting
    * compiler warnings

  * bin/letodb.ini
    * better default setup for newbies

  * Readme.txt

2016-12-31 15:55 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * include/rddleto.ch
  * include/funcleto.
    * move 4 DBI_* constants into user space

  * include/srvleto.h
  * source/client/leto1.c
  * source/client/letocl.c
  * source/server/leto_2.c
  * source/common/lz4net.c
    + possible disabling skipbuffer per table, new default '-2' == no specific
      timeout per table; transfer disabled skipbuffer setting to server
    * increase min size to compress
    % reactivate the use of MSG_MORE flag for Linux! machines
    ; this maybe don't increase network performance, but will significant
      lower CPU load as no extra buffer/ memcpy() is needed to compose message

  * source/server/letofunc.c
    * transfer only one record in case of disabled skipbuffer
    % minors

  * Readme.txt
    + adding commands to manually start/ stop LetoDBf as service, thanks Leon
    + comments on BCC, Variables, use of table specific skipbuffer timeout

  ; had found the correct place of earlier problems with BCC and MsVc,
    but analyse result was wrong: it was a stack variable buffer overflow :-(

2016-12-30 10:11 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/leto1.c
  * source/server/letovars.c
    * some BCC warnings
    ! too long ? value for hb_snprintf

  * source/client/letomgmn.c
    * return in any case of error an [empty] array for LETO_DIRECTORY()

  * source/server/letofunc.c
    ! FIX for older compiler, too much alloc at stack, put at heap
    * cleaning homebrew conversions for FT_FLOAT and FT_LONG
    + add fExlusive in LETO_ORDCREATE()
    ; ToDo same param order as in Harbour

  * utils/backup/letobackup.prg
  * utils/manager/console.prg
    ! == comparison
    * refresh in case of no input

2016-12-28 11:11 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * include/letocl.h
  * source/client/leto1.c
  * source/client/letocl.c
    + fExlusive flag for creating index
    ! fix LetoDbSkip() skipbuffer use
    ; Thanks! to Itamar for pointig to it

  * source/server/letofunc.c
    + fExlusive flag for creating index
    ! fix filename verification for fTemporary index

  * Readme.txt
  * source/server/leto_lnx.c
  * source/server/server.prg
    + adding UID and GID for Linux server to run as daemon

2016-12-23 21:21 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/letomgmn.c
    ! the missing setting to hb_rddDefaultDrv( "LETO" ) in Leto_Connect()
    ; add this for now only here, not in LetoConnectionNew() to not disturb
      intentional used different setup

2016-12-23 21:21 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/letomgmn.c
    * snprintf() --> sprintf(), buffer enlarged

2016-12-23 19:09 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * README.md
    ! typo

  - test/test_max.prg
    ; that was just elch game play

  * tests/test_dbfe.prg
    + add test for dbcreate leaving created WA opened

  * tests/ron.prg
    * use DbAppend() for shared opened tables
    ! let min two threads run for single core

  * test/runall.bat
  * test/runall.sh
    + if no IP is given, take default "127.0.0.1:2812"

  * source/client/letomgmn.c
    ! fix a hb_snprintf( "%f") crash! in XP64 64bit-Mingw 5.1 TDC
    ! general fix decimals for LetoVarSet() double values

  * source/server/leto_2.c
    % pSendBuffer freed/allocated with user [dis]connect, in between re-alloc;
      optimizing checks about
    ; size is 1 byte longer as ulSndBufLen for terminating
    * changing log messages

  * source/server/letofunc.c
    * remove netname log entry disconnect, add exename log entry conntect
    ! leto_Drop() use plain filename only with a PATH set
    % leto_StrTran() s_pDataPath when set with server start, determine length
    * changing log messages

2016-12-22 11:00 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * tests/ron.prg
    % faster run if no log file ( default )
    % as much threads as CPU cores
    ! open DBF with different ALIAS after index creation, else LetoDBf will
      refuse to modify at demo start existing auto-opened index, as then other
      users have then to reload it.
    * formatting

2016-12-21 01:35 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/server/letofunc.c
  * source/server/server.prg
    - clean-ups of remained nonsense, not more needed, #if 0 ...

2016-12-20 23:03 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * tests/ron.prg
    ! missing file in commit, sigh !

2016-12-20 22:57 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * tests/ron.prg
    ! changed Leto_GetCurrentConnection() return type: string!
    ; please verify that also in your sourcecode !

  * source/server/letofunc.c
    - senseless debug message
    ! add DataPath, not a possible DEFAULT to first search PATH list
    % harden-ing possible crash if older client lib did not transfer
      SET DEFAULT/ PATH; leave a note about in letodbf.log

2016-12-19 19:55 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/server/letofunc.c
    ! undeclared var, sigh!

2016-12-19 19:15 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/leto1.c
  * source/client/letocl.c
  * source/client/letomgmn.c
    + re-activated Leto_[Get|Set]CurrentConnection(); by using connection
      string "//IP:port//" what shell be safe; clear of pCurrentConn pointer
      ;THANKs to Itamar to let me think about.

  * Readme.txt
    + updated notes about above

  * source/server/letofunc.c
    * msvc 10 warnings

2016-12-19 15:55 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/leto1.c
    ! missing file in last commit ;-(
    * isolate unlocking records in a solely function
    % formatting

  ; typo in ChangeLog.txt

2016-12-19 11:55 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * source/client/letocl.c
  * source/server/letofunc.c
    ! fix the path beautyfier not wrongly to remove duplicate PS
    * LETO_MEMOISEMPTY() param order change
    * some comments, temporary '//' --> verified to remain '/* */'

  * Readme.txt
    * other fixes and adds

2016-12-19 02:55 UTC+0100 Rolf 'elch' Beckmann (elchs users.noreply.github.com)
  * ChangeLog.txt
    ! wrong date ;-)

  * include/letocl.h
  * include/srvleto.h
  * include/funcleto.h
  * source/client/leto1.c
  * source/client/letocl.c
  * source/client/letomgmn.c
    ! hb_vmCDP() theoretical can return NULL
    ! fix LETO_GETLOCALIP, return also optional server IP
    ! fix the quick fix in LetoMemoRead(), the ToDo remains
    + introducing SET DEFAULT/ SET PATH
    - non existent extern function in funcleto.h
    - removing the Leto_Path() concept, it disturbed a lot !

  * source/server/letofunc.c
    + added protection to not open *same* table with different CP, else it
      will lead to an RTE at client like not allowed shared access
    + introducing SET DEFAULT/ SET PATH
    % search for DBOI_POSITION only first time, then calculate up/ down
      without re-research
    ; used in conjunction with PRG level rddInfo( RDDI_BUFKEYNO, .T. ),
      have extreme negative performance effect if OrdKeyNo() is not very often
      needed, only this case it may improve to buffer value in the skip buffer

  * tests/basic.prg
  * tests/dbfe.prg
    ! fix for test run without new file create

  * Readme.txt
    - LETO_PATH
    * other fixes and adds

2016-12-15 12:00 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * include/cmdleto.h
  * include/funcleto.h
  * include/letocl.h
  * source/client/leto1.c
  * source/client/letocl.c
  * source/server/leto_2.c
  * source/server/letofunc.c
    % last dust from early morning
    + flush() together with append/ update in a smooth kind

  * include/srvleto.h
  * source/server/letofunc.c
    ! dateformat ! wrong detected/ not set during first connect;
      THANKS! goes to Leon for report
    + add info about CP and DF into server connect log entry, moved that
    + check dateformat with each opentable/ createtable if its changed
    + add setting of epoch transmit with initial connect

  * Readme.txt
  * tests/basic.prg
    + add info that dateformat shell be set in application before connecting
      or opening tables

2016-12-13 08:00 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * letodb.hbp
  * letoaddon.hbp
  * letodbsvc.hbp
    ! disable warn=max; warns about cpp+11 style

2016-12-13 07:33 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * include/letocl.h
  * source/client/leto1.c
  * source/client/letocl.c
  * source/server/leto_2.c
  * source/server/letocl.c
  * source/server/leto_2.c
  * source/server/letofunc.c
  * test/test_dbfe.prg
  * test/test_filt.prg
    + RDDI_STRUCTORD
    ! default memotypes fix ( smt )
    - removing partial encrypting record data
    ; in LetoDBf Blowfish encrypt possible with network traffic compression;
      old param in server.prg stays at moment as unused placeholder
    - cleanup

  * source/client/letobmcl.c
  * source/server/letobm.prg
  * source/server/server.prg
    * more secure-ing bitmap filter
    ! missing xOrder for leto_ClearEnv()

  * Readme.txt
    ; as usual until better ;-)

2016-12-13 13:13 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * letodb.hbp
  * letoaddon.hbp
  * letodbsvc.hbp
  * Readme.txt
  * source/server/server.prg
    * added/ modified information about codepage extensions

2016-12-13 09:27 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * Readme.txt
  * source/client/letocl.c
  * source/client/letomgmn.c
    % minor mods

  * source/server/server.prg
    % not use heap
    - cleanups

2016-12-12 23:15 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * include/cmdleto.h
  * include/letocl.h
  * source/client/leto1.c
  * source/client/letocl.c
  * source/server/leto_2.c
  * source/server/letofunc.c
    - removing the LETO_COMMIT() hack, LetoDBf does not benefit, maybe is
      even faster without: will send out data-update, unlock, flush and wait
      for none of these requests for the server ACK
    ; 'command' itself is still there!, can be even called during transactions
    ; removal cleans up functions which are very complex by its nature,
      and belong to the most called ones.

  * Readme.txt
    * tiny note about about, other mods

2016-12-12 17:08 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * source/client/letol.c
    ! revert cleaning the buffers, as it is only searched in limit to formerly
      set item; fix of not everwhere available hb_xreallocz()

2016-12-12 14:11 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * Readme.txt
    * improves; a note about not given :port --> not send

  * test/test_file.prg
    * just a bit clean-up

2016-12-12 05:05 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * Readme.txt
    ! lock mixing only for same WA forbidden
    * move Leto_Ferror to top of list

  * source/client/letocl.c
    * leto_Ferror() also for Leto_File()
    ! quick dirty fix against client crash if filefunc disabled;
    ; ToFix change protocol!

2016-12-12 03:00 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * include/letocl.h
  * source/client/leto1.c
  * source/client/letocl.c
    ! re-allow switching from Rlock() to Flock(), but then remove Rlocks
    * allocate clean buffers !for transactions
    * log all WA with records to append during transaction;
      when transaction is commited, it must for such shareable WA
      exist a [F|R]lock, else Flock() is automatic tried; if that Flock()
      fails, Transaction will throw a RTE.
    ; this resolves a possible race condition at server side:
      after successful check to start transaction sequence, another
      connection could jumped in with a Flock() for a WA with records to be
      appended in transaction; at least a Rlock will prevent that.

  * source/server/letofunc.c
    ! allow Flock() for empty table, aka validation for !RecNo was wrong

  * test/test_ta.prg
    - straying DbUnlock()
  * test/test_mem.prg
    + #define to switch for two performance tests as transaction

  * Readme.txt
    * notes about transactions
    + add leto_direxist, leto_dirremove
    ; not working leto_file() a myth ?

2016-12-11 11:21 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * source/server/letofunc.c
    % mutex lock the list one time before the loop, not for each item
    % redundant 'else' condition

  * Readme.txt
    * more corrections, improvements
    ; more may follow, ToDo: convert to a MD

2016-12-10 21:21 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * source/server/letofunc.c
    ! if not to be unlocked, registering append locks must happen even not
      physical lockable, e.g. for hbMemIO tables.

  * utils/manager/console.prg
    * cell for locks fill the whole browse area

  * Readme.txt
    * more corrections, improvements

2016-12-10 16:55 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * source/client/letol.c
  * source/client/letocl.c
    * inform RDD by SELF_RAWLOCK(), take more care about readonly tables

  * include/srvleto.h
  * source/server/letofunc.c
    + add readonly flag

2016-12-10 15:25 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * include/srvleto.h
  * source/client/letol.c
  * source/server/letofunc.c
    ! during transaction append not to unlock other records, but then unlock
      all appended records after transaction completed or register them;
      do last step only if any record is possible locked by append
    ; this will significiant slow down transaction for shareable, not FLocked
      table, but it's a must to do so

2016-12-10 10:57 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * source/server/letofunc.c
    ! very serious ! silly bug fix about locking, Thanks! goes to Nenad
    ; can someone send him a medallion ?

  * tests/test_mem.prg
    + including test about above fix

2016-12-09 16:55 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * Readme.txt
    * try to more improve, to get important information to the begining

2016-12-09 15:15 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * Readme.txt
    * improving build instructions
    - remove redundant text found in README.md

2016-12-09 14:21 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * source/server/letovars.c
  * source/client/letomgmn.c
    * dissolve inline function into solely target

  * utils/manager/console.prg
    + add change debuglevel into menu

2016-12-09 13:00 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * letodbaddon.hbp
    - remove splice test

  * source/server/letofunc.c
  * source/server/leto_2.c
  * source/client/letocl.c
  * source/client/letol.c
    * correct clang warnings

2016-12-09 12:42 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * source/server/letofunc.c
    * one more compiler warning

  * Readme.txt
    + adding note about installing LetoDBf into system paths

2016-12-09 11:42 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * source/server/letovars.c
  * source/client/letomgmn.c
    * HB_IT_LONG has also no decimals
    * make LETO_VPREVIOUS flag invalid for string and array
    * more clean implementation of double values, fixing rounding problems
    * secure if string or array won't be created because set length limits,
      then not to leave an empty 'typeless' variable
    ! fix wrong boolean detection in LETO_VARGETLIST

  * tests/test_var.prg
    * adding test for LETO_VPREVIOUS

2016-12-09 06:05 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * letodbsvc.hbp
    - double call of lz4net.c

  * source/server/letofunc.c
    * compiler warning about unfinished, still unused funtion

2016-12-08 18:35 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * tests/letoudf.prg
  * source/server/letofunc.c
    ! LETO_RECLOCK() params were screwed after recently add of bAppend param

  * tests/test_var.prg
    * formatting
  * source/server/letovars.c
    * add limitation for arrays to be in sum with all strings default maximum
      64 MB in size, and a quarter of total max ( 16 MB ) for a single item;
      out-of-limits will lead to discard, perhaps leaving empty string/ array;
      config option in letodb.ini is now size-limit of all strings + arrays.
    ; as arrays are stored internally as binary string, a single 16 MB
      PHB_ITEM array means also a xx MB binary sized storing string;
      plus each connection/ thread using such variable will have its own
      TLS PHB_ITEM, so huge values shell be carefully choosen.

  * Readme.txt
    * some corrections, additions, typos, bad english ...
    * additions about use of the new remote console, and Uhura :-)
    ; still remaining nonsense, missing explanations, formatting !, ...

2016-12-08 08:55 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * source/server/leto_lnx.c
    * limit last warn disable for gcc >= 4.06

  * source/client/letocl.c
  * source/client/letomgmn.c
    * pacify two warnings for clang 3.8

2016-12-08 07:59 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * source/server/leto_lnx.c
    * try to disable 2 warning for gcc about unused results, what they are ;-)

2016-12-07 22:20 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * source/client/letocl.c
    ! if a DbSkip( 0 ) results in a changed record ( because filter active ),
      discard the skip buffer

2016-12-07 21:55 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * source/client/letocl.c
    % two more inlining
    - cleanup of '#if 0'

  * include/funcleto.h
    ! LETO_IDXINFOBLOCK macro is expanded, then only last value multiplied;
      missing brackets around that #define of aggregated constants
    ; arghh

2016-12-07 17:32 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * source/common/common_c.c
    * instead of inlining use a copy of ultostr() in eprintf()

2016-12-07 16:55 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * source/common/common_c.c
  * source/common/lz4netc.c
    - not inlining of non static functions

2016-12-07 16:15 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  - source/common/letoserv.prg

  * source/server/letobm.prg
  * source/client/letobmcl.c
  * source/server/server.prg
    - removal of LETO_ATOC() LETO_CTOA() array conversion,
      transmit arrays directly

  * letodb.hbp
  * letoaddon.hbp
  * letodbsvc.hbp
  * letodebug.hbp
  * rddleto.hbp
  * rddletoaddon.hbp
  * rddletodebug.hbp
    - removal of common/letoserv.prg
    ! fix that lz4 is bound in letodbsvc.hbp

2016-12-07 15:05 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * tests/test_var.prg
    + added showcase of variable type: array
    ; a tiny, but very powerful addition to the leto_Var*() system
    * formatting

  * source/server/leto_2.c
    * not inlining leto_ExitGlobal() cause of static variable therein

  * tests/letoudf.prg
    * cleanup

2016-12-07 12:45 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * tests/buildall.bat
  * tests/buildall.sh
  * tests/runall.bat
  * tests/runall.sh
    + added test_file

  * source/server/letovars.c
  * source/client/letocl.c
  * source/client/letomgmn.c
    + intoducing variable type ARRAY for the leto_Var*() system
    * add one casting ulong->ushort, it's verified to do so.

  * source/server/leto_win.c
    ! add a probably missing timeout value to about still nearly original piece
      of LetoDB code.

  * include/funcleto.h
    ! increasing LETO_IDXINFOBLOCK -- ToDo: have to do more specific high ;-)
      mathematics why this was too small

  * source/server/letofunc.c
    * tiny more secure about failure to create an index
    * add fAppend param to LETO_RECLOCK

  * Readme.txt
    * updated for array param in leto_Var*()

2016-12-06 09:00 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * source/server/letobm.prg
  * source/client/letobmcl.c
  * source/client/leto1.c
  * tests/letoudf.prg
  * Readme.txt
    * cleanups

  * Changelog.txt
    * typo

2016-12-06 06:52 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * include/letocl.h
    ; some comments
    % one new item

  * source/client/letocl.c
    * ToDo left from 2016-12-01, fetch memofield out of transaction buffer,
      instead of unmodified server data.
    ; For any data-update during transaction shell be avoided to modify same
      record AND same field multiple times, with in between jumping to another
      record of WA. This case always first modification will be fetched as
      base value for next change.
    % spare a local variable
    % opt out a commonly appearing double call of leto_SearchTransList(),
      one time for read, one time for (buffered) write after changes

2016-12-05 13:00 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * source/server/errint.c
    - removed the willful intentional crash test, so MinGW GNU C 6.2 have
      none! single warning left

2016-12-05 05:50 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * source/client/letomgmn.c
    ! remove last empty array item after deleting the first in leto_udf()

  * source/server/letobm.prg
  * source/client/letobmcl.c
    * added boolean return value for rushmore leto_udf calls

  * source/server/server.prg
    * added requests for __BM functions

  * source/server/letofunc.c
    * changes to accept rushmore filter
    * skip to valid record in leto_Skip() if filter is active

  * include/letocl.h
  * source/client/leto1.c
  * source/client/letocl.c
    * let use rushmore also fOptimized flag like normal
    * throwed LETO_PARSEREC() !PRG! level into the basket bin !
    ; use instead a silly simple DbGoto() or DbGoTop() at PRG level
    * in case of wrong keytype to search for LetoDbSeek() throw a RTE,
      not silently jump to EOF + 1
    - removal of leto_ClearBuffers(), change calls to pTable->ptrBuf = NULL
    ! two more places in [set|clear]filter without skip buffer clearance

2016-12-04 14:15 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * source/client/letocl.c
    ! and another fix for LetoDbGoTo() :-(

2016-12-04 14:09 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * source/client/leto1.c
    * added missing HB_TRACE() for RDDFUNCS, shell be now complete

  * source/client/letocl.c
    ! make the found record in buffer the first in buffer
    - removed the only HB_TRACE

  * source/client/letomgmn.c
    * corrected HB_TRACE

2016-12-04 11:55 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * source/client/letocl.c
    ! not the first record, but the active record not to re-read

2016-12-03 15:15 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * tests/buildall.bat
  * tests/runall.bat
    * file attributes
    ; to run all tests, use: runall[.sh] x.x.x.x
      where this x.x.. is the IP address of server, optional with ':port'

  * source/client/leto1.c
    * do not mark in letoPutRec() autoinc fields for update at server,
      server shell be the only instance who changes these values.

  * include/letocl.h
  * source/client/leto1.c
  * source/client/letocl.c
    ! inherited from LetoDB: in LetoDbGoTo() ulRecno was parsed 1 byte too
      early; there is a pre-leading flag byte before the RecNo,
    * not invalidate skip buffer after [un]locking, so now it's possibe to
      lock and unlock without loosing skip buffer;
    * ensured that first record in buffer is not re-read in LetoDbSkip(),
      as it possible is meanwhile updated
    * do not set uiRecInBuf and do not re-read first record in buffer in
      LetoDbGoTo()
    * adjust buffer origin in LetoDbPutRecord() and LetoDbPutMemo(), so active
      record is the first in buffer after data updates during no transaction
    * add at few places a missing clearance of skip buffer
    % buffer hit counter: uiShoots -> ulShoots
    - no need to fill buffer with a single record, removed leto_setSkipBuf()
      calls - filling buffer will actually happen only in LetoDbSkip()
    ; above will give significant performance increase with repeated calls:
      [F|R]Lock(); REPL ... with ...; DbUnlock(); DbSkip();

  * source/server/letofunc.c
    ! fix wrong calculation for szReply buffer/ fieldinfo in leto_OpenTable()
    * added info in leto_CreateTable() when max record size: 65534 or
      field count: 2047 is oversized

  * source/server/leto_2.c
    % send/ recv buffer size to 64KB

2016-12-03 05:47 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * source/server/letofunc.c
    * revert this change about a compiler warning

2016-12-02 18:15 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * source/client/letocl.c
  * source/client/letomgmn.c
  * source/server/errint.c
  * source/server/letofunc.c
    * try to pacify some MinGW GNU C 6.2 warnings, it found one real bug

2016-12-02 16:20 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * source/client/letocl.c
    ; correcting old comment, description was wrong
    ! fix!, that a record length of 43 is treated as no new record data,
      >= 0x2B0000 is secure never to happen

  * source/server/letofunc.c
    ! fix a crash during try to close not found WA ( empty pAStru )
    * typo

2016-12-01 20:12 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  ; README.md
    ; typo - file missing in last commit

  * include/letocl.h
  * source/client/leto1.c
    - removal of older xHarbour RDDFUNCS table version ( __OLDRDD__ )

2016-12-01 19:15 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * README.md
    * typo

  * Readme.txt
    - mark LETO_SETSEEKBUFFER as deprecated

  * include/letocl.h
  * source/client/client1.c
  * source/client/clientcl.c
    % minor performance arrangement for transactions
    - remove of seek buffers aka LETO_SETSEEKBUFFER,
      was off by default and the logig behind meanwhile got invalid,
      leading to a nice clean LetoDbSeek()

2016-12-01 11:45 UTC+0100 Rolf Beckmann ( elchs users.noreply.github.com )
  * include/letocl.h
  * source/client/client1.c
  * source/client/clientcl.c
    * move changed-record update call [ --> leto_PutRec() ] into letoSkipRaw(),
      so all these calls are in client1.c, only except for record appending;
      added reset of pending relations
    - remove relicts of ugly FastAppend hack, it led to serious problems in
      multiple areas ( memo update, locks tracking, autoincrement fields, .. );
      a transaction can be used instead for a similar effect
    + added field type HB_FT_ANY for transactions ( untested );
    ; ToDo ?: updated memo fields in transaction buffer, difficult :-(

2016-11-30
  * .
    initial upload after huge changes in all areas
